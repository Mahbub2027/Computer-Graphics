************Circle*************
#include<bits/stdc++.h>
#include<graphics.h>
using namespace std;

void drawcircle(int xc, int yc, int  x, int y){
    putpixel(xc+x, yc+y, GREEN);
    putpixel(xc+x, yc-y, RED);
    putpixel(xc-x, yc+y, BLUE);
    putpixel(xc-x, yc-y, BLACK);
    putpixel(xc+y, yc+x, YELLOW);
    putpixel(xc+y, yc-x, CYAN);
    putpixel(xc-y, yc+x, RED);
    putpixel(xc-y, yc-x, BLACK);

}


int main(){
    int gd = DETECT,gm;
    initgraph(&gd, &gm, " ");

    int x,y, r, xc, yc;
    cin>>xc>>yc>>r;

    int d= 3-(2*r);

    while(x<=r){
       drawcircle(xc,yc, x,y);
        if(d<0){
            d= d + (4*x)+6;
            x++;
        }
        else{
            d= d + 4*(x-y)+10;
            y--;
            x++;
        }
    }

    getch();
    closegraph();
    return 0;
}
****************************

********Mid*****************
#include<bits/stdc++.h>
#include<graphics.h>
using namespace std;

void drawcircle(int xc, int yc, int  x, int y){
    putpixel(xc+x, yc+y, GREEN);
    putpixel(xc+x, yc-y, RED);
    putpixel(xc-x, yc+y, BLUE);
    putpixel(xc-x, yc-y, BLACK);
    putpixel(xc+y, yc+x, YELLOW);
    putpixel(xc+y, yc-x, CYAN);
    putpixel(xc-y, yc+x, RED);
    putpixel(xc-y, yc-x, BLACK);

}


int main(){
    int gd = DETECT,gm;
    initgraph(&gd, &gm, " ");

    int x,y, r, xc, yc;
    cin>>xc>>yc>>r;

    int d= 5/4 -r;

    while(x<=r){
       drawcircle(xc,yc, x,y);
        if(d<0){
            d= d + (4*x)+6;
            //x++;
        }
        else{
            d= d + 2*(x-y)+5;
            y--;
            //x++;
        }
        x++;
    }

    getch();
    closegraph();
    return 0;
}
*********************************

********LIne********************
#include<bits/stdc++.h>
#include<graphics.h>
#include<conio.h>
#include<dos.h>
using namespace std;

void drawline(int x0, int y0, int x1, int y1)
{
    int dx, dy, p, x, y;
    dx=x1-x0;
    dy=y1-y0;
    x=x0;
    y=y0;
    p=2*dy-dx;
    while(x<x1)
    {
        if(p>=0)
        {
            putpixel(x,y,7);
            y=y+1;
            p=p+2*dy-2*dx;
        }
        else
        {
            putpixel(x,y,7);
            p=p+2*dy;}
            x=x+1;
        }
}
int main()
{
    int gdriver=DETECT, gmode, error, x0, y0, x1, y1;
    initgraph(&gdriver, &gmode, "c:\\turboc3\\bgi");
    cout<<"Enter co-ordinates of first point: ";
    cin>>x0>>y0;
    cout<<"Enter co-ordinates of second point: ";
    cin>>x1>>y1;
    drawline(x0, y0, x1, y1);

}
*******************************************

********dda**********************
#include<graphics.h>
#include<conio.h>
#include<stdio.h>
void main()
{
    intgd = DETECT ,gm, i;
    float x, y,dx,dy,steps;
    int x0, x1, y0, y1;
    initgraph(&gd, &gm, "C:\\TC\\BGI");
    setbkcolor(WHITE);
    x0 = 100 , y0 = 200, x1 = 500, y1 = 300;
    dx = (float)(x1 - x0);
    dy = (float)(y1 - y0);
    if(dx>=dy)
           {
        steps = dx;
    }
    else
           {
        steps = dy;
    }
    dx = dx/steps;
    dy = dy/steps;
    x = x0;
    y = y0;
    i = 1;
    while(i<= steps)
    {
        putpixel(x, y, RED);
        x += dx;
        y += dy;
        i=i+1;
    }
    getch();
    closegraph();
}
****************************

*******ract***************
#include<graphics.h>
int main(){

    int gd = DETECT, gm;

    initgraph(&gd, &gm, "");
    line(250,150,150,150);  ////x1
    line(150,250,150,150);  /// y1
    line(150,250,250,250);
    line(250,150,250,250);


    getch();
    closegraph();

}
********************



